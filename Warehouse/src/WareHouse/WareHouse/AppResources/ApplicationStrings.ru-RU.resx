<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NameProductException" xml:space="preserve">
    <value>Неправильное имя (только латинские и кирилличесике буквы, цифры).</value>
  </data>
  <data name="QuantityProductException" xml:space="preserve">
    <value>Неправильное количество товара.</value>
  </data>
  <data name="UcnProductException" xml:space="preserve">
    <value>Неправильный УНК (только латинские буквы, цифры и "-").</value>
  </data>
  <data name="CodeProductException" xml:space="preserve">
    <value>Неправильный код (только латинские буквы, цифры и "-").</value>
  </data>
  <data name="AdditionalSettingsText" xml:space="preserve">
    <value>Дополнительные Настройки</value>
  </data>
  <data name="ChangeImgText" xml:space="preserve">
    <value>Изменить</value>
  </data>
  <data name="ProductCodePlaceholder" xml:space="preserve">
    <value>Введите код товара</value>
  </data>
  <data name="ProductDescriptionPlaceholder" xml:space="preserve">
    <value>Введите описание</value>
  </data>
  <data name="ProductDiscountPlaceholder" xml:space="preserve">
    <value>Введите скидку</value>
  </data>
  <data name="GeneralSettingsText" xml:space="preserve">
    <value>Основные настройки</value>
  </data>
  <data name="ProductNamePlaceholder" xml:space="preserve">
    <value>Введите имя продукта</value>
  </data>
  <data name="ProductPricePlaceholder" xml:space="preserve">
    <value>Введите цену</value>
  </data>
  <data name="ProductQuantityPlaceholder" xml:space="preserve">
    <value>Введите кол-во</value>
  </data>
  <data name="ProductUcnPlaceholder" xml:space="preserve">
    <value>Введите УНК продукта</value>
  </data>
  <data name="CreateProduct" xml:space="preserve">
    <value>Создать продукт</value>
  </data>
  <data name="DiscountProductException" xml:space="preserve">
    <value>Неправильная скидка (только больше 0 и меньше 100).</value>
  </data>
  <data name="NameCompanyException" xml:space="preserve">
    <value>Неправильное имя (только латинские и кирилличесике буквы и "-").</value>
  </data>
  <data name="PriceProductException" xml:space="preserve">
    <value>Неверная цена</value>
  </data>
  <data name="ChiefCompanyException" xml:space="preserve">
    <value>Неправильное имя главы (только латинские и кирилличесике буквы и "-").</value>
  </data>
  <data name="AdressCompanyException" xml:space="preserve">
    <value>Неправильный адресс (только латинские и кирилличесике буквы, цифры и "-").</value>
  </data>
  <data name="PhoneNumberCompanyException" xml:space="preserve">
    <value>Неправильный номер (только цифры и "-").</value>
  </data>
  <data name="ImgToStringException" xml:space="preserve">
    <value>Ошибка при конвертировании изображения в base64.</value>
  </data>
  <data name="StringToImgException" xml:space="preserve">
    <value>Ошибка при конвертировании base64 в изображение.</value>
  </data>
  <data name="ErorrMessage" xml:space="preserve">
    <value>Ошибка!</value>
  </data>
  <data name="ImageFileDialogFilter" xml:space="preserve">
    <value>png files (*.png)|*.png|jpg files (*.jpg)|*.jpg|bmp files (*.bmp)|*.bmp|All files (*.*)|*.*</value>
  </data>
  <data name="CompanyNamePlaceholder" xml:space="preserve">
    <value>Введите название компании</value>
  </data>
  <data name="CompanyAddressPlaceholder" xml:space="preserve">
    <value>Введите адрес компании</value>
  </data>
  <data name="CompanyPhoneNumberPlaceholder" xml:space="preserve">
    <value>Введите тел. номер компании</value>
  </data>
  <data name="CompanyChiefPlaceholder" xml:space="preserve">
    <value>Введите имя главы компании</value>
  </data>
  <data name="CompanyDescriptionPlaceholder" xml:space="preserve">
    <value>Введите описание компании</value>
  </data>
  <data name="CompanyExistException" xml:space="preserve">
    <value>Компания с таким именем уже существует.</value>
  </data>
  <data name="CompanyNotFoundException" xml:space="preserve">
    <value>Компания с таким именем не существует.</value>
  </data>
  <data name="NameSectionException" xml:space="preserve">
    <value>Неправильное имя (только латинские и кирилличесике буквы, цифры).</value>
  </data>
  <data name="SectionExistException" xml:space="preserve">
    <value>Раздел с таким именем в данном узле уже существует.</value>
  </data>
  <data name="SectionNotFoundException" xml:space="preserve">
    <value>Раздел с таким именем не существует.</value>
  </data>
  <data name="ProductExistException" xml:space="preserve">
    <value>Товар с таким именем в данном узле уже существует.</value>
  </data>
  <data name="ProductNotFoundException" xml:space="preserve">
    <value>Товар с таким именем не существует.</value>
  </data>
  <data name="RootNamePlaceholder" xml:space="preserve">
    <value>Введите имя узла</value>
  </data>
  <data name="SectionSelectException" xml:space="preserve">
    <value>Выберите один из данных разделов или нажмите "Cancel".</value>
  </data>
  <data name="CompanySelectedException" xml:space="preserve">
    <value>Не выбрана/создана компания.</value>
  </data>
  <data name="AddRootText" xml:space="preserve">
    <value>Узел</value>
  </data>
  <data name="AddSectionText" xml:space="preserve">
    <value>Подузел</value>
  </data>
  <data name="AddProductText" xml:space="preserve">
    <value>Товар</value>
  </data>
  <data name="SearchPlaceholder" xml:space="preserve">
    <value>Введите текст</value>
  </data>
  <data name="GenerateButtonText" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="QuantityButtonText" xml:space="preserve">
    <value>Кол-во</value>
  </data>
  <data name="PriceButtonText" xml:space="preserve">
    <value>Цена</value>
  </data>
  <data name="WarningMessageText" xml:space="preserve">
    <value>Вы уверены?</value>
  </data>
  <data name="MessageWarning" xml:space="preserve">
    <value>Внимание!</value>
  </data>
  <data name="QuantityParseException" xml:space="preserve">
    <value>Количество не целое число.</value>
  </data>
  <data name="PriceParseException" xml:space="preserve">
    <value>Цена не действительное число.</value>
  </data>
  <data name="DiscountParseException" xml:space="preserve">
    <value>Скидка не действительное число.</value>
  </data>
  <data name="ProductMinimumQuantityException" xml:space="preserve">
    <value>Неправильное количество (больше 1).</value>
  </data>
  <data name="ProductMinimumQuantityParseException" xml:space="preserve">
    <value>Количество не целое число.</value>
  </data>
  <data name="MinimumQuantityPlaceholder" xml:space="preserve">
    <value>Введите минимальное количество товара</value>
  </data>
  <data name="SaveFileFilter" xml:space="preserve">
    <value>CSV files(*.csv) | *.csv</value>
  </data>
  <data name="FatalErrorMessage" xml:space="preserve">
    <value>Fatal Error!</value>
  </data>
  <data name="WarehouseExistWarning" xml:space="preserve">
    <value>Склад уже существует. Вы хотите перезаписать?</value>
  </data>
</root>